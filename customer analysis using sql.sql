create database customer;
use customer;
drop  table customer_shopping_behavior;
CREATE TABLE customer_shopping_behavior (
    customer_id INT,
    age INT,
    gender VARCHAR(20),
    item_purchased VARCHAR(100),
    category VARCHAR(50),
    purchase_amount FLOAT,
    location VARCHAR(100),
    size VARCHAR(20),
    color VARCHAR(30),
    season VARCHAR(30),
    review_rating FLOAT,
    subscription_status VARCHAR(20),
    shipping_type VARCHAR(50),
    discount_applied VARCHAR(10),
    promo_code_used VARCHAR(10),
    previous_purchases INT,
    payment_method VARCHAR(30),
    frequency_of_purchases VARCHAR(30)
);
DESCRIBE customer_shopping_behavior;
select *from customer_shopping_behavior;

-- Q1.What is the total revenue generated by male vs female customers?
select gender,sum(purchase_amount) as revenue from customer_shopping_behavior group by gender;

-- Q2.Which customer used a discount but still spent more than the average purchase amount ?
select customer_id , purchase_amount from  customer_shopping_behavior where discount_applied = 'yes' and purchase_amount >= (select avg(purchase_amount) from customer_shopping_behavior);

-- Q3. What are the top 5 products with highest average rating?
select item_purchased,avg(review_rating) as average_rating from customer_shopping_behavior group by item_purchased order by 'desc' limit 5;


-- Q4. Compare the average purchase amounts between Standard and Express Shipping
SELECT 
    shipping_type,
    ROUND(AVG(purchase_amount), 2) AS average_purchase
FROM 
 customer_shopping_behavior   
WHERE 
    shipping_type IN ('Standard', 'Express')
GROUP BY 
    shipping_type
    
-- Q5. Do subscribed customers spend more? 
-- Compare average spend and total revenue between subscribers and non-subscribers.

SELECT 
    subscription_status,
    COUNT(customer_id) AS total_customers,
    ROUND(AVG(purchase_amount), 2) AS avg_spend,
    ROUND(SUM(purchase_amount), 2) AS total_revenue
FROM 
    customer_shopping_behavior 
GROUP BY 
    subscription_status
ORDER BY 
    total_revenue  , avg_spend desc; 
    
-- Q6. Which 5 products have the highest percentage of purchases with discounts applied?

SELECT 
    item_purchased,
    ROUND(
        SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END) / COUNT(*) * 100, 
        2)
    AS discount_rate
FROM 
    customer_shopping_behavior 
GROUP BY 
    item_purchased
ORDER BY 
    discount_rate DESC
LIMIT 5;    

-- Q7. Segment customers into New, Returning, and Loyal 
-- based on their total number of previous purchases, and show the count of each segment.

SELECT 
    customer_segment, 
    COUNT(*) AS number_of_customers
FROM (
    SELECT 
        CASE
            WHEN previous_purchases = 1 THEN 'New'
            WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'
            ELSE 'Loyal'
        END AS customer_segment
    FROM customer_shopping_behavior
) AS customer_type
GROUP BY customer_segment;

-- Q8. What are the top 3 most purchased products within each category?

WITH item_counts AS (
    SELECT 
        category,
        item_purchased,
        COUNT(customer_id) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY category ORDER BY COUNT(customer_id) DESC) AS item_rank
    FROM 
        customer_shopping_behavior 
    GROUP BY 
        category, item_purchased
)
SELECT 
    item_rank,
    category,
    item_purchased,
    total_orders
FROM 
    item_counts
WHERE 
    item_rank <= 3;
    
-- Q9. Are customers who are repeat buyers (more than 5 previous purchases) also likely to subscribe?

SELECT 
    subscription_status,
    COUNT(customer_id) AS repeat_buyers
FROM 
    customer_shopping_behavior 
WHERE 
    previous_purchases > 5
GROUP BY 
    subscription_status;    
    
-- Q10. What is the revenue contribution of each age group?

SELECT 
    age,
    SUM(purchase_amount) AS total_revenue
FROM 
    customer_shopping_behavior 
GROUP BY 
    age
ORDER BY 
    total_revenue DESC;    